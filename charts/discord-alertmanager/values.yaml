# -- number of replicas; this should generally always be 1.
replicaCount: 1

image:
  # -- the image repository to pull from.
  repository: ghcr.io/lrstanley/discord-alertmanager
  # -- the image pull policy (generally shouldn't be changed).
  pullPolicy: IfNotPresent
  # -- image tag to use. defaults to the chart's appVersion.
  tag: ""

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- specifies whether a service account should be created.
  create: true
  # -- annotations to add to the service account.
  annotations: {}
  # -- the name of the service account to use.
  # if not set and create is true, a name is generated using the fullname template.
  name: ""

# -- annotations to append to the deployment.
podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- additional init containers to add to the deployment.
initContainers: []
  # - name: wait-for-postgresql
  #   image: busybox:latest
  #   command: ['sh', '-c', 'do-something-here']

resources:
  # -- resource requests.
  requests:
    cpu: 10m
    memory: 20Mi
  # -- resource limits. generally don't recommend applying a limit on cpu.
  limits:
    memory: 50Mi

# -- have an existing secret or config-map that contains sensitive env vars? supply the name here.
environmentFrom: []
  # - configMapRef:
  #     name: your-configmap
  # - secretRef:
  #     name: your-secret

# -- environment variables to set in the deployment.
environment: {}
  # - name: LOG_LEVEL
  #   value: "info"
  # - name: ALERTMANAGER_URL
  #   value: "http://alertmanager.monitoring.svc.cluster.local:9093"
  # - name: ALERTMANAGER_USERNAME
  #   valueFrom:
  #     secretKeyRef:
  #       name: placeholder
  #       key: username
  # - name: ALERTMANAGER_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: placeholder
  #       key: password

nodeSelector: {}
affinity: {}
tolerations: {}
