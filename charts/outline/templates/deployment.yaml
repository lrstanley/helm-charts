apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "outline.fullname" . }}
  labels:
    {{- include "outline.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "outline.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- /* checksums, which ensure that if anything changes (that might not recreate the pods) will force recreate the pods */}}
        checksum/environment: {{ toYaml .Values.environment | sha256sum }}
        {{- if and .Values.redis.enabled .Values.redis.auth.enabled .Values.redis.auth.generate }}
        checksum/redis-generated-credentials: {{ include (print $.Template.BasePath "/secret_redis_credentials.yaml") . | sha256sum }}
        {{- end }}
        checksum/redis-auth: {{ toYaml .Values.redis.auth | sha256sum }}
        {{- if and .Values.postgresql.enabled .Values.postgresql.auth.generate }}
        checksum/postgresql-generated-credentials: {{ include (print $.Template.BasePath "/secret_postgresql_credentials.yaml") . | sha256sum }}
        {{- end }}
        checksum/postgresql-auth: {{ toYaml .Values.postgresql.auth | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "outline.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "outline.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.postgresql.enabled }}
        - name: wait-for-postgresql
          image: busybox:latest
          command:
            - "sh"
            - "-c"
            - "until nc -z {{ .Release.Name }}-postgresql {{ .Values.postgresql.primary.service.ports.postgresql }}; do echo 'waiting for postgresql'; sleep 2; done;"
        {{- end }}
        {{- if .Values.redis.enabled }}
        - name: wait-for-redis
          image: busybox:latest
          command:
            - "sh"
            - "-c"
            - "until nc -z {{ .Release.Name }}-redis-master {{ .Values.redis.master.service.ports.redis }}; do echo 'waiting for redis'; sleep 2; done;"
        {{- end }}
        {{- if .Values.minio.enabled }}
        - name: wait-for-minio
          image: busybox:latest
          command:
            - "sh"
            - "-c"
            - "until nc -z {{ .Values.minio.ingress.hostname }} {{ if or .Values.minio.forceUrlAsHttps .Values.minio.apiIngress.tls }}443{{ else }}80{{ end }}; do echo 'waiting for minio'; sleep 2; done;"
        {{- end }}
        {{- with .Values.initContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{ with .Values.environmentFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{ end }}
          env:
            {{- /* https://github.com/outline/outline/blob/main/.env.sample */}}
            - name: NODE_ENV
              value: "production"
            {{- if .Values.outline.generateEncryptionKeys }}
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-enc-keys" (include "outline.fullname" .) | trunc 63 | trimSuffix "-" | quote }}
                  key: secret-key
            - name: UTILS_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-enc-keys" (include "outline.fullname" .) | trunc 63 | trimSuffix "-" | quote }}
                  key: utils-secret
            {{- end }}
            - name: FORCE_HTTPS
              value: {{ .Values.outline.forceHttps | quote }}
            - name: COLLABORATION_URL
              value: {{ .Values.outline.collaborationUrl | quote }}
            - name: ENABLE_UPDATES
              value: {{ .Values.outline.enableUpdates | quote }}
            - name: WEB_CONCURRENCY
              value: {{ .Values.outline.webConcurrency | quote }}
            - name: MAXIMUM_IMPORT_SIZE
              value: {{ printf "%0.f" .Values.outline.maximumImportSize | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.outline.logLevel | quote }}
            {{- if .Values.outline.debug }}
            - name: DEBUG
              value: {{ .Values.outline.debug | quote }}
            {{- end }}
            - name: ALLOWED_DOMAINS
              value: {{ .Values.outline.allowedDomains | quote }}
            - name: DEFAULT_LANGUAGE
              value: {{ .Values.outline.defaultLanguage | quote }}
            - name: PGSSLMODE
              value: {{ .Values.outline.database.encryptionMode | quote }}
            - name: DATABASE_CONNECTION_POOL_MIN
              value: {{ .Values.outline.database.connectionPoolMin | quote }}
            - name: DATABASE_CONNECTION_POOL_MAX
              value: {{ .Values.outline.database.connectionPoolMax | quote }}
            - name: FILE_STORAGE
              value: {{ .Values.outline.fileStorage.system | quote }}
            - name: FILE_STORAGE_UPLOAD_MAX_SIZE
              value: {{ printf "%0.f" .Values.outline.fileStorage.uploadMaxSize | quote }}
            - name: FILE_STORAGE_LOCAL_ROOT_DIR
              value: {{ .Values.outline.fileStorage.localRootDir | quote }}
            {{- if .Values.outline.rateLimiter.enabled }}
            - name: RATE_LIMITER_ENABLED
              value: {{ .Values.outline.rateLimiter.enabled | quote }}
            - name: RATE_LIMITER_REQUESTS
              value: {{ printf "%0.f" .Values.outline.rateLimiter.requests | quote }}
            - name: RATE_LIMITER_DURATION_WINDOW
              value: {{ printf "%0.f" .Values.outline.rateLimiter.durationWindow | quote }}
            {{- end }}
            {{- if .Values.outline.url }}
            - name: URL
              value: {{ .Values.outline.url | quote }}
            {{- else if gt (len .Values.ingress.hosts) 0 }}
            {{- if gt (len .Values.ingress.tls) 0 }}
            - name: URL
              value: "https://{{ (first .Values.ingress.hosts).host }}"
            {{- else }}
            - name: URL
              value: "http://{{ (first .Values.ingress.hosts).host }}"
            {{- end }}
            {{- end }}
            - name: CDN_URL
              value: {{ .Values.outline.cdnUrl | quote }}
            - name: PORT
              value: {{ .Values.service.port | quote }}
            {{- if .Values.redis.enabled }}
            {{- if and .Values.redis.auth.enabled .Values.redis.auth.generate }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.auth.existingSecret | quote }}
                  key: {{ .Values.redis.auth.existingSecretPasswordKey | quote }}
            - name: REDIS_URL
              value: "redis://$(REDIS_PASSWORD)@{{ .Release.Name }}-redis-master:{{ .Values.redis.master.service.ports.redis }}"
            {{- else if and .Values.redis.auth.enabled .Values.redis.auth.password }}
            - name: REDIS_URL
              value: "redis://{{ .Values.redis.auth.password }}@{{ .Release.Name }}-redis-master:{{ .Values.redis.master.service.ports.redis }}"
            {{- else }}
            - name: REDIS_URL
              value: "redis://{{ .Release.Name }}-redis-master:{{ .Values.redis.master.service.ports.redis }}"
            {{- end }}
            {{- end }}
            {{- if .Values.postgresql.enabled }}
            {{- if .Values.postgresql.auth.generate }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.auth.existingSecret | quote }}
                  key: {{ (.Values.postgresql.auth.secretKeys.userPasswordKey | default "password") | quote }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.postgresql.auth.username }}:$(DATABASE_PASSWORD)@{{ .Release.Name }}-postgresql:{{ .Values.postgresql.primary.service.ports.postgresql }}/{{ .Values.postgresql.auth.database }}"
            {{- else if .Values.postgresql.auth.password }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Release.Name }}-postgresql:{{ .Values.postgresql.primary.service.ports.postgresql }}/{{ .Values.postgresql.auth.database }}"
            {{- end }}
            {{- end }}
            {{ if .Values.minio.enabled }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.minio.auth.existingSecret | quote }}
                  key: "root-user"
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.minio.auth.existingSecret | quote }}
                  key: "root-password"
            - name: AWS_REGION
              value: "us-east-1"
            - name: AWS_S3_UPLOAD_BUCKET_URL
              value: "{{ if or .Values.minio.forceUrlAsHttps .Values.minio.apiIngress.tls }}https{{ else }}http{{ end }}://{{ .Values.minio.ingress.hostname }}"
            - name: AWS_S3_UPLOAD_BUCKET_NAME
              value: {{ .Values.minio.defaultBuckets | quote }}
            - name: AWS_S3_FORCE_PATH_STYLE
              value: "true"
            - name: AWS_S3_ACL
              value: "private"
            {{ end }}
            {{- with .Values.environment }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
            initialDelaySeconds: 5
            failureThreshold: 24
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /_health
              port: http
            initialDelaySeconds: 5
            failureThreshold: 2
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
